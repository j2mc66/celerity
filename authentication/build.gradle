group = 'com.example.celerity'

ext {
    queryDslVersion = '4.2.1'
}

compileJava {
    options.compilerArgs << "-s"
    options.compilerArgs << "$projectDir/src/generated/java"

    doFirst {
        // make sure that directory exists
        file(new File(projectDir, "/src/generated/java")).mkdirs()
    }
}

clean.doLast {
    // clean-up directory when necessary
    file(new File(projectDir, "/src/generated")).deleteDir()
}

sourceSets {
    generated {
        java {
            srcDir "$projectDir/src/generated/java"
        }
    }
}

dependencies {
	
	compile project(':exception-handler')
	compile project(':commons')
	
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'	
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
	
	implementation 'org.springframework.security:spring-security-jwt'
	
	runtimeOnly 'com.h2database:h2'
	
    compileOnly "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
		
	//needed because the query dsl annotation processor doesn't recognize javax.persistence.Entity
    annotationProcessor 'org.springframework.boot:spring-boot-starter-data-jpa' 
		
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

